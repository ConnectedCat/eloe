package  {	import org.tuio.osc.OSCManager;	import org.tuio.ITuioListener;	import org.tuio.TuioBlob;	import org.tuio.TuioClient;	import org.tuio.TuioCursor;	import org.tuio.TuioObject;	import org.tuio.connectors.LCConnector;	import flash.display.Sprite;	import flash.display.Shape;		public class Main extends Sprite implements ITuioListener{				public static const TILT_MODE : int = 4;		public static const SEND_DATA_SIZE : int = 6;				protected var client : TuioClient;		protected var connectionNameIn : String = "_OscDataStream";		protected var connectionNameOut : String = "_OscDataStreamOut";		protected var lcConnector : LCConnector;		protected var oscManager : OSCManager;				public var lines:Array;		public function Main() {						lcConnector = new LCConnector(connectionNameIn, connectionNameOut);						client = new TuioClient(lcConnector);			client.addListener(this);						oscManager = new OSCManager(null, lcConnector);			oscManager.start();						lines = new Array();						// constructor code		}				public function addTuioCursor(tuioCursor : TuioCursor) : void		{			lines[tuioCursor.sessionID.toString()] = new Shape();			stage.addChild(lines[tuioCursor.sessionID.toString()]);			lines[tuioCursor.sessionID.toString()].graphics.moveTo(tuioCursor.x * stage.stageWidth, tuioCursor.y * stage.stageHeight);			lines[tuioCursor.sessionID.toString()].graphics.lineStyle(8, 0x00FA14);			new Ring(tuioCursor.sessionID.toString(), this, tuioCursor.x * stage.stageWidth, tuioCursor.y * stage.stageHeight, 10);		}		public function updateTuioCursor(tuioCursor : TuioCursor) : void		{			try			{				lines[tuioCursor.sessionID.toString()].graphics.lineTo(tuioCursor.x * stage.stageWidth, tuioCursor.y * stage.stageHeight);				var ring : Ring = getChildByName(tuioCursor.sessionID.toString()) as Ring;				ring.moveTo(tuioCursor.x * stage.stageWidth, tuioCursor.y * stage.stageHeight);				trace(tuioCursor.X.toString());			}			catch(e : Error)			{			}		}		public function removeTuioCursor(tuioCursor : TuioCursor) : void		{			try			{				var ring : Ring = getChildByName(tuioCursor.sessionID.toString()) as Ring;				ring.destroy();			}			catch(e : Error)			{			}		}				public function addTuioObject(tuioObject : TuioObject) : void		{		}		public function updateTuioObject(tuioObject : TuioObject) : void		{		}		public function removeTuioObject(tuioObject : TuioObject) : void		{		}		public function addTuioBlob(tuioBlob : TuioBlob) : void		{		}		public function updateTuioBlob(tuioBlob : TuioBlob) : void		{		}		public function removeTuioBlob(tuioBlob : TuioBlob) : void		{		}		public function newFrame(id : uint) : void		{		}	}//end class	}//end package